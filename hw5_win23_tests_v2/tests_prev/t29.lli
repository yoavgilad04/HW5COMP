declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var1 = constant [11 x i8] c"Print this\00"
@.var5 = constant [16 x i8] c"Dont print this\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define i32 @var0foo()
{
    %myArr_0 = alloca [50 x i32]
    %var2 = getelementptr [11 x i8] , [11 x i8]* @.var1, i32 0, i32 0
    call void (i8*) @print(i8* %var2)
    %var3 = add i32 10, 0
    ret i32 %var3
    ret i32 0
}

define i32 @var4fooNot()
{
    %myArr_1 = alloca [50 x i32]
    %var6 = getelementptr [16 x i8] , [16 x i8]* @.var5, i32 0, i32 0
    call void (i8*) @print(i8* %var6)
    %var7 = add i32 10, 0
    ret i32 %var7
    ret i32 0
}

define void @main()
{
    %myArr_2 = alloca [50 x i32]
    %var8 = add i32 1, 0
    %var9 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    store i32 %var8, i32* %var9
    %var10 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var11 = load i32, i32* %var10
    call void @printi(i32 %var11)
    %var12 = add i32 2, 0
    %var13 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    store i32 %var12, i32* %var13
    %var14 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var15 = load i32, i32* %var14
    call void @printi(i32 %var15)
    %var16 = add i32 3, 0
    %var17 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    store i32 %var16, i32* %var17
    %var18 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var19 = load i32, i32* %var18
    call void @printi(i32 %var19)
    %var20 = add i32 4, 0
    %var21 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    store i32 %var20, i32* %var21
    %var22 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var23 = load i32, i32* %var22
    call void @printi(i32 %var23)
    %var24 = add i32 5, 0
    %var25 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    store i32 %var24, i32* %var25
    %var26 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var27 = load i32, i32* %var26
    call void @printi(i32 %var27)
    %var28 = add i32 6, 0
    %var29 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    store i32 %var28, i32* %var29
    %var30 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var31 = load i32, i32* %var30
    call void @printi(i32 %var31)
    %var32 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var33 = load i32, i32* %var32
    call void @printi(i32 %var33)
    %var34 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var35 = load i32, i32* %var34
    call void @printi(i32 %var35)
    %var36 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var37 = load i32, i32* %var36
    call void @printi(i32 %var37)
    %var38 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var39 = load i32, i32* %var38
    call void @printi(i32 %var39)
    %var40 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
    %var41 = load i32, i32* %var40
    call void @printi(i32 %var41)
    ret void
}


declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var20 = constant [2 x i8] c" \00"
@.var27 = constant [8 x i8] c"newline\00"
@.var63 = constant [8 x i8] c"newline\00"
@.var65 = constant [23 x i8] c"Spiral print completed\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @main()
{
    %myArr_0 = alloca [50 x i32]
    %var0 = add i32 10, 0
    %var1 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var0, i32* %var1
    %var2 = add i32 1, 0
    %var3 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
    store i32 %var2, i32* %var3
    %var4 = add i32 1, 0
    %var5 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
    store i32 %var4, i32* %var5
    %var6 = add i32 1, 0
    %var7 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 3
    store i32 %var6, i32* %var7
    %var8 = add i32 1, 0
    %var9 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 4
    store i32 %var8, i32* %var9
    br label %label_41
    label_41:
        %var10 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 4
        %var11 = load i32, i32* %var10
        %var12 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var13 = load i32, i32* %var12
        %var14 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var15 = load i32, i32* %var14
        %var16 = mul i32 %var13, %var15
        %var17 = icmp sle i32 %var11, %var16
        br i1 %var17, label %label_51, label %label_113
    label_51:
        %var18 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 4
        %var19 = load i32, i32* %var18
        call void @printi(i32 %var19)
        %var21 = getelementptr [2 x i8] , [2 x i8]* @.var20, i32 0, i32 0
        call void (i8*) @print(i8* %var21)
        %var22 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
        %var23 = load i32, i32* %var22
        %var24 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var25 = load i32, i32* %var24
        %var26 = icmp eq i32 %var23, %var25
        br i1 %var26, label %label_63, label %label_67
    label_63:
        %var28 = getelementptr [8 x i8] , [8 x i8]* @.var27, i32 0, i32 0
        call void (i8*) @print(i8* %var28)
        br label %label_67
    label_67:
        %var29 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
        %var30 = load i32, i32* %var29
        %var31 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 3
        %var32 = load i32, i32* %var31
        %var33 = add i32 %var30, %var32
        %var34 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
        store i32 %var33, i32* %var34
        %var35 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
        %var36 = load i32, i32* %var35
        %var37 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var38 = load i32, i32* %var37
        %var39 = add i32 1, 0
        %var40 = add i32 %var38, %var39
        %var41 = icmp eq i32 %var36, %var40
        br i1 %var41, label %label_89, label %label_83
    label_83:
        %var42 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
        %var43 = load i32, i32* %var42
        %var44 = add i32 0, 0
        %var45 = icmp eq i32 %var43, %var44
        br i1 %var45, label %label_89, label %label_103
    label_89:
        %var46 = add i32 0, 0
        %var47 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 3
        %var48 = load i32, i32* %var47
        %var49 = sub i32 %var46, %var48
        %var50 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 3
        store i32 %var49, i32* %var50
        %var51 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        %var52 = load i32, i32* %var51
        %var53 = add i32 1, 0
        %var54 = add i32 %var52, %var53
        %var55 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        store i32 %var54, i32* %var55
        br label %label_103
    label_103:
        %var56 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 4
        %var57 = load i32, i32* %var56
        %var58 = add i32 1, 0
        %var59 = add i32 %var57, %var58
        %var60 = trunc i32 %var59 to i8
        %var61 = zext i8 %var60 to i32
        %var62 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 4
        store i32 %var61, i32* %var62
        br label %label_41
    label_113:
        %var64 = getelementptr [8 x i8] , [8 x i8]* @.var63, i32 0, i32 0
        call void (i8*) @print(i8* %var64)
        %var66 = getelementptr [23 x i8] , [23 x i8]* @.var65, i32 0, i32 0
        call void (i8*) @print(i8* %var66)
        ret void
}


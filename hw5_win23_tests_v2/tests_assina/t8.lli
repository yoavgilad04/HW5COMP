declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var0 = constant [74 x i8] c"You thought we were done with byte calculations?? HA! don't make me laugh\00"
@.var2 = constant [22 x i8] c"Expecting 254 255 254\00"
@.var28 = constant [7 x i8] c"OK bye\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @main()
{
    %myArr_0 = alloca [50 x i32]
    %var1 = getelementptr [74 x i8] , [74 x i8]* @.var0, i32 0, i32 0
    call void (i8*) @print(i8* %var1)
    %var3 = getelementptr [22 x i8] , [22 x i8]* @.var2, i32 0, i32 0
    call void (i8*) @print(i8* %var3)
    %var4 = add i32 254, 0
    %var5 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var4, i32* %var5
    %var6 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var7 = load i32, i32* %var6
    call void @printi(i32 %var7)
    %var8 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var9 = load i32, i32* %var8
    %var10 = add i32 1, 0
    %var11 = trunc i32 %var9 to i8
    %var12 = trunc i32 %var10 to i8
    %var13 = add i8 %var11, %var12
    %var14 = zext i8 %var13 to i32
    %var15 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var14, i32* %var15
    %var16 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var17 = load i32, i32* %var16
    call void @printi(i32 %var17)
    %var18 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var19 = load i32, i32* %var18
    %var20 = add i32 2, 0
    %var21 = trunc i32 %var19 to i8
    %var22 = trunc i32 %var20 to i8
    %var23 = mul i8 %var21, %var22
    %var24 = zext i8 %var23 to i32
    %var25 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var24, i32* %var25
    %var26 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var27 = load i32, i32* %var26
    call void @printi(i32 %var27)
    %var29 = getelementptr [7 x i8] , [7 x i8]* @.var28, i32 0, i32 0
    call void (i8*) @print(i8* %var29)
    ret void
}


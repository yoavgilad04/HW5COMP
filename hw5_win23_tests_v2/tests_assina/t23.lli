declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var0 = constant [17 x i8] c"MORE while tests\00"
@.var2 = constant [63 x i8] c"will be calculating x + 1 in each iteration starting from x= 0\00"
@.var12 = constant [7 x i8] c"x is: \00"
@.var34 = constant [13 x i8] c"You are good\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @main()
{
    %myArr_0 = alloca [50 x i32]
    %var1 = getelementptr [17 x i8] , [17 x i8]* @.var0, i32 0, i32 0
    call void (i8*) @print(i8* %var1)
    %var3 = getelementptr [63 x i8] , [63 x i8]* @.var2, i32 0, i32 0
    call void (i8*) @print(i8* %var3)
    %var4 = add i32 0, 0
    %var5 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var4, i32* %var5
    br label %label_33
    label_33:
        %var6 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var7 = load i32, i32* %var6
        %var8 = add i32 23, 0
        %var9 = icmp slt i32 %var7, %var8
        br i1 %var9, label %label_43, label %label_39
    label_39:
        %var10 = add i32 0, 0
        %var11 = icmp eq i32 %var10, 1
        br i1 %var11, label %label_43, label %label_77
    label_43:
        %var13 = getelementptr [7 x i8] , [7 x i8]* @.var12, i32 0, i32 0
        call void (i8*) @print(i8* %var13)
        %var14 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var15 = load i32, i32* %var14
        call void @printi(i32 %var15)
        %var16 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var17 = load i32, i32* %var16
        %var18 = add i32 1, 0
        %var19 = add i32 %var17, %var18
        %var20 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        store i32 %var19, i32* %var20
        br label %label_33
        %var21 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var22 = load i32, i32* %var21
        %var23 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var24 = load i32, i32* %var23
        %var25 = sub i32 %var22, %var24
        %var26 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        store i32 %var25, i32* %var26
        %var27 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        %var28 = load i32, i32* %var27
        %var29 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        %var30 = load i32, i32* %var29
        %var32 = icmp eq i32 %var30, 0
        br i1 %var32, label %label_69, label %label_72
    label_69:
        call void @divByZero()
        br label %label_72
    label_72:
        %var31 = sdiv i32 %var28, %var30
        %var33 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        store i32 %var31, i32* %var33
        br label %label_33
    label_77:
        %var35 = getelementptr [13 x i8] , [13 x i8]* @.var34, i32 0, i32 0
        call void (i8*) @print(i8* %var35)
        ret void
}


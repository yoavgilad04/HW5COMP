declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var0 = constant [24 x i8] c"This is the third test!\00"
@.var2 = constant [32 x i8] c"Here we will test division by 0\00"
@.var4 = constant [23 x i8] c"now calculating 1 + 2:\00"
@.var10 = constant [15 x i8] c"The result is:\00"
@.var14 = constant [28 x i8] c"now calculating prev_res/0 \00"
@.var22 = constant [23 x i8] c"You shouldn't be here!\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @main()
{
    %myArr_0 = alloca [50 x i32]
    %var1 = getelementptr [24 x i8] , [24 x i8]* @.var0, i32 0, i32 0
    call void (i8*) @print(i8* %var1)
    %var3 = getelementptr [32 x i8] , [32 x i8]* @.var2, i32 0, i32 0
    call void (i8*) @print(i8* %var3)
    %var5 = getelementptr [23 x i8] , [23 x i8]* @.var4, i32 0, i32 0
    call void (i8*) @print(i8* %var5)
    %var6 = add i32 1, 0
    %var7 = add i32 2, 0
    %var8 = add i32 %var6, %var7
    %var9 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var8, i32* %var9
    %var11 = getelementptr [15 x i8] , [15 x i8]* @.var10, i32 0, i32 0
    call void (i8*) @print(i8* %var11)
    %var12 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var13 = load i32, i32* %var12
    call void @printi(i32 %var13)
    %var15 = getelementptr [28 x i8] , [28 x i8]* @.var14, i32 0, i32 0
    call void (i8*) @print(i8* %var15)
    %var16 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var17 = load i32, i32* %var16
    %var18 = add i32 0, 0
    %var20 = icmp eq i32 %var18, 0
    br i1 %var20, label %label_48, label %label_51
    label_48:
        call void @divByZero()
        br label %label_51
    label_51:
        %var19 = sdiv i32 %var17, %var18
        %var21 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        store i32 %var19, i32* %var21
        %var23 = getelementptr [23 x i8] , [23 x i8]* @.var22, i32 0, i32 0
        call void (i8*) @print(i8* %var23)
        ret void
}


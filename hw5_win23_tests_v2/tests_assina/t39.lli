declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var1 = constant [11 x i8] c"got param:\00"
@.var11 = constant [13 x i8] c"Expecting 39\00"
@.var16 = constant [15 x i8] c"actual result:\00"
@.var20 = constant [5 x i8] c"done\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define i32 @var0advancedFunc(i32)
{
    %myArr_0 = alloca [50 x i32]
    %var2 = getelementptr [11 x i8] , [11 x i8]* @.var1, i32 0, i32 0
    call void (i8*) @print(i8* %var2)
    %var3 = add i32 %0, 0
    call void @printi(i32 %var3)
    %var4 = add i32 %0, 0
    %var5 = trunc i32 %var4 to i8
    %var6 = zext i8 %var5 to i32
    ret i32 %var6
    ret i32 0
}

define i32 @var7getTrue()
{
    %myArr_1 = alloca [50 x i32]
    %var8 = add i32 1, 0
    %var9 = icmp eq i32 %var8, 1
    br i1 %var9, label %label_42, label %label_44
    label_42:
        br label %label_46
    label_44:
        br label %label_46
    label_46:
        %var10 = phi i32 [1, %label_42], [0, %label_44]
        ret i32 %var10
        ret i32 0
}

define void @main()
{
    %myArr_2 = alloca [50 x i32]
        %var12 = getelementptr [13 x i8] , [13 x i8]* @.var11, i32 0, i32 0
        call void (i8*) @print(i8* %var12)
        %var13 = add i32 39, 0
        %var14 = call i32 @var0advancedFunc(i32 %var13)
        %var15 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
        store i32 %var14, i32* %var15
        %var17 = getelementptr [15 x i8] , [15 x i8]* @.var16, i32 0, i32 0
        call void (i8*) @print(i8* %var17)
        %var18 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
        %var19 = load i32, i32* %var18
        call void @printi(i32 %var19)
        %var21 = getelementptr [5 x i8] , [5 x i8]* @.var20, i32 0, i32 0
        call void (i8*) @print(i8* %var21)
        ret void
}


declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var0 = constant [21 x i8] c"surprise while test!\00"
@.var2 = constant [46 x i8] c"div by 0 should appear by the 256th iteration\00"
@.var6 = constant [22 x i8] c"infinite loop coming:\00"
@.var20 = constant [12 x i8] c"iteration: \00"
@.var34 = constant [19 x i8] c"Shouldn't get here\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @main()
{
    %myArr_0 = alloca [50 x i32]
    %var1 = getelementptr [21 x i8] , [21 x i8]* @.var0, i32 0, i32 0
    call void (i8*) @print(i8* %var1)
    %var3 = getelementptr [46 x i8] , [46 x i8]* @.var2, i32 0, i32 0
    call void (i8*) @print(i8* %var3)
    %var4 = add i32 0, 0
    %var5 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var4, i32* %var5
    %var7 = getelementptr [22 x i8] , [22 x i8]* @.var6, i32 0, i32 0
    call void (i8*) @print(i8* %var7)
    br label %label_35
    label_35:
        %var8 = add i32 1, 0
        %var9 = icmp eq i32 %var8, 1
        br i1 %var9, label %label_39, label %label_74
    label_39:
        %var10 = add i32 255, 0
        %var11 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        store i32 %var10, i32* %var11
        %var12 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var13 = load i32, i32* %var12
        %var14 = add i32 1, 0
        %var15 = trunc i32 %var13 to i8
        %var16 = trunc i32 %var14 to i8
        %var17 = add i8 %var15, %var16
        %var18 = zext i8 %var17 to i32
        %var19 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        store i32 %var18, i32* %var19
        %var21 = getelementptr [12 x i8] , [12 x i8]* @.var20, i32 0, i32 0
        call void (i8*) @print(i8* %var21)
        %var22 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var23 = load i32, i32* %var22
        call void @printi(i32 %var23)
        %var24 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        %var25 = load i32, i32* %var24
        %var26 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var27 = load i32, i32* %var26
        %var28 = trunc i32 %var25 to i8
        %var29 = trunc i32 %var27 to i8
        %var31 = icmp eq i8 %var29, 0
        br i1 %var31, label %label_65, label %label_68
    label_65:
        call void @divByZero()
        br label %label_68
    label_68:
        %var30 = udiv i8 %var28, %var29
        %var32 = zext i8 %var30 to i32
        %var33 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        store i32 %var32, i32* %var33
        br label %label_35
    label_74:
        %var35 = getelementptr [19 x i8] , [19 x i8]* @.var34, i32 0, i32 0
        call void (i8*) @print(i8* %var35)
        ret void
}


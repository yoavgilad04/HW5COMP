declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var0 = constant [28 x i8] c"100 / (256b) is div by zero\00"
@.var19 = constant [35 x i8] c"You failed this basic test! (lmao)\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @main()
{
    %myArr_0 = alloca [50 x i32]
    %var1 = getelementptr [28 x i8] , [28 x i8]* @.var0, i32 0, i32 0
    call void (i8*) @print(i8* %var1)
    %var2 = add i32 100, 0
    %var3 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var2, i32* %var3
    %var4 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var5 = load i32, i32* %var4
    %var6 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var7 = load i32, i32* %var6
    %var8 = add i32 156, 0
    %var9 = trunc i32 %var7 to i8
    %var10 = trunc i32 %var8 to i8
    %var11 = add i8 %var9, %var10
    %var12 = zext i8 %var11 to i32
    %var13 = trunc i32 %var5 to i8
    %var14 = trunc i32 %var12 to i8
    %var16 = icmp eq i8 %var14, 0
    br i1 %var16, label %label_43, label %label_46
    label_43:
        call void @divByZero()
        br label %label_46
    label_46:
        %var15 = udiv i8 %var13, %var14
        %var17 = zext i8 %var15 to i32
        %var18 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        store i32 %var17, i32* %var18
        %var20 = getelementptr [35 x i8] , [35 x i8]* @.var19, i32 0, i32 0
        call void (i8*) @print(i8* %var20)
        ret void
}


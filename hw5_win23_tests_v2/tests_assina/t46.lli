declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var1 = constant [18 x i8] c"Called basicFunc!\00"
@.var4 = constant [16 x i8] c"Should print 38\00"
@.var7 = constant [9 x i8] c"Finished\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define i32 @var0basicFunc()
{
    %myArr_0 = alloca [50 x i32]
    %var2 = getelementptr [18 x i8] , [18 x i8]* @.var1, i32 0, i32 0
    call void (i8*) @print(i8* %var2)
    %var3 = add i32 38, 0
    ret i32 %var3
    ret i32 0
}

define void @main()
{
    %myArr_1 = alloca [50 x i32]
    %var5 = getelementptr [16 x i8] , [16 x i8]* @.var4, i32 0, i32 0
    call void (i8*) @print(i8* %var5)
    %var6 = call i32 @var0basicFunc()
    call void @printi(i32 %var6)
    %var8 = getelementptr [9 x i8] , [9 x i8]* @.var7, i32 0, i32 0
    call void (i8*) @print(i8* %var8)
    ret void
}


declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var0 = constant [25 x i8] c"This is the fourth test!\00"
@.var2 = constant [30 x i8] c"Here we test all calculations\00"
@.var4 = constant [28 x i8] c"now testing add - x = 1 + 2\00"
@.var10 = constant [16 x i8] c"The result is: \00"
@.var14 = constant [28 x i8] c"now testing mul - y = x * 4\00"
@.var21 = constant [16 x i8] c"The result is: \00"
@.var25 = constant [26 x i8] c"now testing add z = x + y\00"
@.var33 = constant [16 x i8] c"The result is: \00"
@.var37 = constant [24 x i8] c"now testing div y = x/z\00"
@.var46 = constant [16 x i8] c"The result is: \00"
@.var50 = constant [5 x i8] c"Bye!\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @main()
{
    %myArr_0 = alloca [50 x i32]
    %var1 = getelementptr [25 x i8] , [25 x i8]* @.var0, i32 0, i32 0
    call void (i8*) @print(i8* %var1)
    %var3 = getelementptr [30 x i8] , [30 x i8]* @.var2, i32 0, i32 0
    call void (i8*) @print(i8* %var3)
    %var5 = getelementptr [28 x i8] , [28 x i8]* @.var4, i32 0, i32 0
    call void (i8*) @print(i8* %var5)
    %var6 = add i32 1, 0
    %var7 = add i32 2, 0
    %var8 = add i32 %var6, %var7
    %var9 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var8, i32* %var9
    %var11 = getelementptr [16 x i8] , [16 x i8]* @.var10, i32 0, i32 0
    call void (i8*) @print(i8* %var11)
    %var12 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var13 = load i32, i32* %var12
    call void @printi(i32 %var13)
    %var15 = getelementptr [28 x i8] , [28 x i8]* @.var14, i32 0, i32 0
    call void (i8*) @print(i8* %var15)
    %var16 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var17 = load i32, i32* %var16
    %var18 = add i32 4, 0
    %var19 = mul i32 %var17, %var18
    %var20 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
    store i32 %var19, i32* %var20
    %var22 = getelementptr [16 x i8] , [16 x i8]* @.var21, i32 0, i32 0
    call void (i8*) @print(i8* %var22)
    %var23 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
    %var24 = load i32, i32* %var23
    call void @printi(i32 %var24)
    %var26 = getelementptr [26 x i8] , [26 x i8]* @.var25, i32 0, i32 0
    call void (i8*) @print(i8* %var26)
    %var27 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var28 = load i32, i32* %var27
    %var29 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
    %var30 = load i32, i32* %var29
    %var31 = add i32 %var28, %var30
    %var32 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
    store i32 %var31, i32* %var32
    %var34 = getelementptr [16 x i8] , [16 x i8]* @.var33, i32 0, i32 0
    call void (i8*) @print(i8* %var34)
    %var35 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
    %var36 = load i32, i32* %var35
    call void @printi(i32 %var36)
    %var38 = getelementptr [24 x i8] , [24 x i8]* @.var37, i32 0, i32 0
    call void (i8*) @print(i8* %var38)
    %var39 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    %var40 = load i32, i32* %var39
    %var41 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
    %var42 = load i32, i32* %var41
    %var44 = icmp eq i32 %var42, 0
    br i1 %var44, label %label_76, label %label_79
    label_76:
        call void @divByZero()
        br label %label_79
    label_79:
        %var43 = sdiv i32 %var40, %var42
        %var45 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        store i32 %var43, i32* %var45
        %var47 = getelementptr [16 x i8] , [16 x i8]* @.var46, i32 0, i32 0
        call void (i8*) @print(i8* %var47)
        %var48 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        %var49 = load i32, i32* %var48
        call void @printi(i32 %var49)
        %var51 = getelementptr [5 x i8] , [5 x i8]* @.var50, i32 0, i32 0
        call void (i8*) @print(i8* %var51)
        ret void
}


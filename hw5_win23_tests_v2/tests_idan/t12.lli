declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var3 = constant [5 x i8] c"abcd\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @main()
{
    %myArr_0 = alloca [50 x i32]
    %var0 = add i32 0, 0
    %var1 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var0, i32* %var1
    %var2 = add i32 123, 0
    call void @printi(i32 %var2)
    %var4 = getelementptr [5 x i8] , [5 x i8]* @.var3, i32 0, i32 0
    call void (i8*) @print(i8* %var4)
    br label %label_33
    label_33:
        %var5 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var6 = load i32, i32* %var5
        %var7 = add i32 10, 0
        %var8 = icmp slt i32 %var6, %var7
        br i1 %var8, label %label_39, label %label_50
    label_39:
        %var9 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var10 = load i32, i32* %var9
        call void @printi(i32 %var10)
        %var11 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var12 = load i32, i32* %var11
        %var13 = add i32 1, 0
        %var14 = add i32 %var12, %var13
        %var15 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        store i32 %var14, i32* %var15
        br label %label_33
    label_50:
        ret void
}


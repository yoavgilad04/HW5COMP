declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var87 = constant [6 x i8] c"hello\00"
@.var112 = constant [17 x i8] c"The numbers are \00"
@.var120 = constant [5 x i8] c"not \00"
@.var122 = constant [6 x i8] c"equal\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define i32 @var0addint(i32, i32)
{
    %myArr_0 = alloca [50 x i32]
    %var1 = add i32 %0, 0
    %var2 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var1, i32* %var2
    %var3 = add i32 %1, 0
    %var4 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
    store i32 %var3, i32* %var4
    br label %label_32
    label_32:
        %var5 = add i32 1, 0
        %var6 = icmp eq i32 %var5, 1
        br i1 %var6, label %label_36, label %label_61
    label_36:
        %var7 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        %var8 = load i32, i32* %var7
        %var9 = add i32 0, 0
        %var10 = icmp eq i32 %var8, %var9
        br i1 %var10, label %label_42, label %label_47
    label_42:
        %var11 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var12 = load i32, i32* %var11
        ret i32 %var12
        br label %label_47
    label_47:
        %var13 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var14 = load i32, i32* %var13
        %var15 = add i32 1, 0
        %var16 = add i32 %var14, %var15
        %var17 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        store i32 %var16, i32* %var17
        %var18 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        %var19 = load i32, i32* %var18
        %var20 = add i32 1, 0
        %var21 = sub i32 %var19, %var20
        %var22 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        store i32 %var21, i32* %var22
        br label %label_32
    label_61:
        ret i32 0
}

define i32 @var23addByte(i32, i32)
{
    %myArr_1 = alloca [50 x i32]
        %var24 = add i32 %0, 0
        %var25 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        store i32 %var24, i32* %var25
        %var26 = add i32 %1, 0
        %var27 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 1
        store i32 %var26, i32* %var27
        br label %label_75
    label_75:
        %var28 = add i32 1, 0
        %var29 = icmp eq i32 %var28, 1
        br i1 %var29, label %label_79, label %label_107
    label_79:
        %var30 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 1
        %var31 = load i32, i32* %var30
        %var32 = add i32 0, 0
        %var33 = icmp eq i32 %var31, %var32
        br i1 %var33, label %label_85, label %label_90
    label_85:
        %var34 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        %var35 = load i32, i32* %var34
        ret i32 %var35
        br label %label_90
    label_90:
        %var36 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        %var37 = load i32, i32* %var36
        %var38 = add i32 1, 0
        %var39 = trunc i32 %var37 to i8
        %var40 = trunc i32 %var38 to i8
        %var41 = add i8 %var39, %var40
        %var42 = zext i8 %var41 to i32
        %var43 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        store i32 %var42, i32* %var43
        %var44 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 1
        %var45 = load i32, i32* %var44
        %var46 = add i32 1, 0
        %var47 = sub i32 %var45, %var46
        %var48 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 1
        store i32 %var47, i32* %var48
        br label %label_75
    label_107:
        ret i32 0
}

define i32 @var49areEqual(i32, i32)
{
    %myArr_2 = alloca [50 x i32]
        %var50 = add i32 %0, 0
        %var51 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
        store i32 %var50, i32* %var51
        %var52 = add i32 %1, 0
        %var53 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 1
        store i32 %var52, i32* %var53
        br label %label_121
    label_121:
        %var54 = add i32 1, 0
        %var55 = icmp eq i32 %var54, 1
        br i1 %var55, label %label_125, label %label_162
    label_125:
        %var56 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
        %var57 = load i32, i32* %var56
        %var58 = add i32 0, 0
        %var59 = icmp eq i32 %var57, %var58
        br i1 %var59, label %label_131, label %label_145
    label_131:
        %var60 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 1
        %var61 = load i32, i32* %var60
        %var62 = add i32 0, 0
        %var63 = icmp eq i32 %var61, %var62
        br i1 %var63, label %label_137, label %label_139
    label_137:
        br label %label_141
    label_139:
        br label %label_141
    label_141:
        %var64 = phi i32 [1, %label_137], [0, %label_139]
        ret i32 %var64
        br label %label_145
    label_145:
        %var65 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
        %var66 = load i32, i32* %var65
        %var67 = add i32 1, 0
        %var68 = sub i32 %var66, %var67
        %var69 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 0
        store i32 %var68, i32* %var69
        %var70 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 1
        %var71 = load i32, i32* %var70
        %var72 = add i32 1, 0
        %var73 = trunc i32 %var71 to i8
        %var74 = trunc i32 %var72 to i8
        %var75 = sub i8 %var73, %var74
        %var76 = zext i8 %var75 to i32
        %var77 = getelementptr [50 x i32], [50 x i32]* %myArr_2, i32 0, i32 1
        store i32 %var76, i32* %var77
        br label %label_121
    label_162:
        ret i32 0
}

define void @var78sayHello(i32)
{
    %myArr_3 = alloca [50 x i32]
        %var79 = add i32 %0, 0
        %var80 = getelementptr [50 x i32], [50 x i32]* %myArr_3, i32 0, i32 0
        store i32 %var79, i32* %var80
        br label %label_173
    label_173:
        %var81 = add i32 1, 0
        %var82 = icmp eq i32 %var81, 1
        br i1 %var82, label %label_177, label %label_196
    label_177:
        %var83 = getelementptr [50 x i32], [50 x i32]* %myArr_3, i32 0, i32 0
        %var84 = load i32, i32* %var83
        %var85 = add i32 0, 0
        %var86 = icmp eq i32 %var84, %var85
        br i1 %var86, label %label_183, label %label_186
    label_183:
        ret void
        br label %label_186
    label_186:
        %var88 = getelementptr [6 x i8] , [6 x i8]* @.var87, i32 0, i32 0
        call void (i8*) @print(i8* %var88)
        %var89 = getelementptr [50 x i32], [50 x i32]* %myArr_3, i32 0, i32 0
        %var90 = load i32, i32* %var89
        %var91 = add i32 1, 0
        %var92 = sub i32 %var90, %var91
        %var93 = getelementptr [50 x i32], [50 x i32]* %myArr_3, i32 0, i32 0
        store i32 %var92, i32* %var93
        br label %label_173
    label_196:
        ret void
}

define void @main()
{
    %myArr_4 = alloca [50 x i32]
        %var94 = add i32 0, 0
        %var95 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 0
        store i32 %var94, i32* %var95
        %var96 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 0
        %var97 = load i32, i32* %var96
        %var98 = add i32 5, 0
        %var99 = call i32 @var0addint(i32 %var97, i32 %var98)
        %var100 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 0
        store i32 %var99, i32* %var100
        %var101 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 0
        %var102 = load i32, i32* %var101
        call void @printi(i32 %var102)
        %var103 = add i32 0, 0
        %var104 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 1
        store i32 %var103, i32* %var104
        %var105 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 1
        %var106 = load i32, i32* %var105
        %var107 = add i32 5, 0
        %var108 = call i32 @var23addByte(i32 %var106, i32 %var107)
        %var109 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 1
        store i32 %var108, i32* %var109
        %var110 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 1
        %var111 = load i32, i32* %var110
        call void @printi(i32 %var111)
        %var113 = getelementptr [17 x i8] , [17 x i8]* @.var112, i32 0, i32 0
        call void (i8*) @print(i8* %var113)
        %var114 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 0
        %var115 = load i32, i32* %var114
        %var116 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 1
        %var117 = load i32, i32* %var116
        %var118 = call i32 @var49areEqual(i32 %var115, i32 %var117)
        %var119 = icmp eq i32 %var118, 1
        br i1 %var119, label %label_240, label %label_236
    label_236:
        %var121 = getelementptr [5 x i8] , [5 x i8]* @.var120, i32 0, i32 0
        call void (i8*) @print(i8* %var121)
        br label %label_240
    label_240:
        %var123 = getelementptr [6 x i8] , [6 x i8]* @.var122, i32 0, i32 0
        call void (i8*) @print(i8* %var123)
        %var124 = getelementptr [50 x i32], [50 x i32]* %myArr_4, i32 0, i32 0
        %var125 = load i32, i32* %var124
        call void @var78sayHello(i32 %var125)
        ret void
}


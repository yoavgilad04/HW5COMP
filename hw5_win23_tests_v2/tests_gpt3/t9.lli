declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var13 = constant [3 x i8] c"ok\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define i32 @var0f()
{
    %myArr_0 = alloca [50 x i32]
    %var1 = add i32 1, 0
    %var2 = icmp eq i32 %var1, 1
    br i1 %var2, label %label_28, label %label_30
    label_28:
        br label %label_32
    label_30:
        br label %label_32
    label_32:
        %var3 = phi i32 [1, %label_28], [0, %label_30]
        ret i32 %var3
        ret i32 0
}

define void @main()
{
    %myArr_1 = alloca [50 x i32]
        %var4 = call i32 @var0f()
        %var5 = icmp eq i32 %var4, 1
        br i1 %var5, label %label_44, label %label_46
    label_44:
        br label %label_48
    label_46:
        br label %label_48
    label_48:
        %var6 = phi i32 [1, %label_44], [0, %label_46]
        %var7 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        store i32 %var6, i32* %var7
        %var8 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        %var9 = load i32, i32* %var8
        %var10 = icmp eq i32 %var9, 1
        br i1 %var10, label %label_56, label %label_63
    label_56:
        %var11 = add i32 5, 0
        %var12 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 1
        store i32 %var11, i32* %var12
        %var14 = getelementptr [3 x i8] , [3 x i8]* @.var13, i32 0, i32 0
        call void (i8*) @print(i8* %var14)
        br label %label_63
    label_63:
        ret void
}


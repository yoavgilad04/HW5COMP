declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define i32 @var0foo(i32, i32)
{
    %myArr_0 = alloca [50 x i32]
    %var1 = add i32 %0, 0
    %var2 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var1, i32* %var2
    br label %label_29
    label_29:
        %var3 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var4 = load i32, i32* %var3
        %var5 = add i32 0, 0
        %var6 = icmp sgt i32 %var4, %var5
        br i1 %var6, label %label_35, label %label_54
    label_35:
        %var7 = add i32 2, 0
        %var8 = add i32 %1, 0
        %var9 = mul i32 %var7, %var8
        %var10 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var11 = load i32, i32* %var10
        %var12 = icmp eq i32 %var9, %var11
        br i1 %var12, label %label_43, label %label_46
    label_43:
        br label %label_54
        br label %label_46
    label_46:
        %var13 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var14 = load i32, i32* %var13
        %var15 = add i32 1, 0
        %var16 = sub i32 %var14, %var15
        %var17 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        store i32 %var16, i32* %var17
        br label %label_29
    label_54:
        %var18 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var19 = load i32, i32* %var18
        %var20 = trunc i32 %var19 to i8
        %var21 = zext i8 %var20 to i32
        ret i32 %var21
        ret i32 0
}

define void @main()
{
    %myArr_1 = alloca [50 x i32]
        %var22 = add i32 10, 0
        %var23 = add i32 3, 0
        %var24 = trunc i32 %var23 to i8
        %var25 = zext i8 %var24 to i32
        %var26 = call i32 @var0foo(i32 %var22, i32 %var25)
        call void @printi(i32 %var26)
        %var27 = add i32 10, 0
        %var28 = add i32 20, 0
        %var29 = trunc i32 %var28 to i8
        %var30 = zext i8 %var29 to i32
        %var31 = call i32 @var0foo(i32 %var27, i32 %var30)
        call void @printi(i32 %var31)
        ret void
}


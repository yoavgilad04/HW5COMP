declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var6 = constant [166 x i8] c"Believe in yourself, take on your challenges, dig deep within yourself to conquer fears. Never let anyone bring you down. You got to keep going. - Chantal Sutherland\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @var0maxTestsTestArithmeticInIf()
{
    %myArr_0 = alloca [50 x i32]
    %var1 = add i32 1, 0
    %var2 = add i32 1, 0
    %var3 = add i32 1, 0
    %var4 = add i32 %var2, %var3
    %var5 = icmp slt i32 %var1, %var4
    br i1 %var5, label %label_31, label %label_35
    label_31:
        %var7 = getelementptr [166 x i8] , [166 x i8]* @.var6, i32 0, i32 0
        call void (i8*) @print(i8* %var7)
        br label %label_35
    label_35:
        ret void
}

define void @main()
{
    %myArr_1 = alloca [50 x i32]
        call void @var0maxTestsTestArithmeticInIf()
        ret void
}


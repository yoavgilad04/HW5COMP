declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define i32 @var0gcd(i32, i32)
{
    %myArr_0 = alloca [50 x i32]
    %var1 = add i32 %0, 0
    %var2 = add i32 %1, 0
    %var3 = icmp slt i32 %var1, %var2
    br i1 %var3, label %label_29, label %label_35
    label_29:
        %var4 = add i32 %1, 0
        %var5 = add i32 %0, 0
        %var6 = call i32 @var0gcd(i32 %var4, i32 %var5)
        ret i32 %var6
        br label %label_35
    label_35:
        %var7 = add i32 %1, 0
        %var8 = add i32 0, 0
        %var9 = icmp eq i32 %var7, %var8
        br i1 %var9, label %label_40, label %label_44
    label_40:
        %var10 = add i32 %0, 0
        ret i32 %var10
        br label %label_44
    label_44:
        %var11 = add i32 %0, 0
        %var12 = add i32 %1, 0
        %var14 = icmp eq i32 %var12, 0
        br i1 %var14, label %label_49, label %label_52
    label_49:
        call void @divByZero()
        br label %label_52
    label_52:
        %var13 = sdiv i32 %var11, %var12
        %var15 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        store i32 %var13, i32* %var15
        %var16 = add i32 %0, 0
        %var17 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var18 = load i32, i32* %var17
        %var19 = add i32 %1, 0
        %var20 = mul i32 %var18, %var19
        %var21 = sub i32 %var16, %var20
        %var22 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        store i32 %var21, i32* %var22
        %var23 = add i32 %1, 0
        %var24 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        %var25 = load i32, i32* %var24
        %var26 = call i32 @var0gcd(i32 %var23, i32 %var25)
        ret i32 %var26
        ret i32 0
}

define void @main()
{
    %myArr_1 = alloca [50 x i32]
        %var27 = add i32 121, 0
        %var28 = add i32 33, 0
        %var29 = call i32 @var0gcd(i32 %var27, i32 %var28)
        call void @printi(i32 %var29)
        ret void
}


declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var13 = constant [2 x i8] c"a\00"
@.var22 = constant [2 x i8] c"b\00"
@.var35 = constant [2 x i8] c"c\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @main()
{
    %myArr_0 = alloca [50 x i32]
    %var0 = add i32 2, 0
    %var1 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
    store i32 %var0, i32* %var1
    %var2 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
    store i32 0, i32* %var2
    %var3 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
    store i32 0, i32* %var3
    %var4 = add i32 1, 0
    %var5 = icmp eq i32 %var4, 1
    br i1 %var5, label %label_35, label %label_37
    label_35:
        br label %label_39
    label_37:
        br label %label_39
    label_39:
        %var6 = phi i32 [1, %label_35], [0, %label_37]
        %var7 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 3
        store i32 %var6, i32* %var7
        %var8 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 3
        %var9 = load i32, i32* %var8
        %var10 = icmp eq i32 %var9, 1
        br i1 %var10, label %label_47, label %label_81
    label_47:
        %var11 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
        %var12 = load i32, i32* %var11
        call void @printi(i32 %var12)
        %var14 = getelementptr [2 x i8] , [2 x i8]* @.var13, i32 0, i32 0
        call void (i8*) @print(i8* %var14)
        %var15 = add i32 0, 0
        %var16 = icmp eq i32 %var15, 1
        br i1 %var16, label %label_56, label %label_58
    label_56:
        br label %label_60
    label_58:
        br label %label_60
    label_60:
        %var17 = phi i32 [1, %label_56], [0, %label_58]
        %var18 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 4
        store i32 %var17, i32* %var18
        %var19 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 1
        %var20 = load i32, i32* %var19
        %var21 = icmp eq i32 %var20, 1
        br i1 %var21, label %label_79, label %label_68
    label_68:
        %var23 = getelementptr [2 x i8] , [2 x i8]* @.var22, i32 0, i32 0
        call void (i8*) @print(i8* %var23)
        %var24 = add i32 1, 0
        %var25 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
        store i32 %var24, i32* %var25
        %var26 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
        %var27 = load i32, i32* %var26
        %var28 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 5
        store i32 %var27, i32* %var28
        br label %label_79
    label_79:
        br label %label_81
    label_81:
        %var29 = add i32 2, 0
        %var30 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 4
        store i32 %var29, i32* %var30
        %var31 = add i32 3, 0
        %var32 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 4
        store i32 %var31, i32* %var32
        %var33 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 2
        %var34 = load i32, i32* %var33
        call void @printi(i32 %var34)
        %var36 = getelementptr [2 x i8] , [2 x i8]* @.var35, i32 0, i32 0
        call void (i8*) @print(i8* %var36)
        %var37 = getelementptr [50 x i32], [50 x i32]* %myArr_0, i32 0, i32 0
        %var38 = load i32, i32* %var37
        call void @printi(i32 %var38)
        ret void
}


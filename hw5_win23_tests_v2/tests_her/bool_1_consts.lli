declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"
@.var2 = constant [5 x i8] c"true\00"
@.var4 = constant [6 x i8] c"false\00"
@.var8 = constant [5 x i8] c"true\00"
@.var10 = constant [6 x i8] c"false\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define void @main()
{
    %myArr_0 = alloca [50 x i32]
    %var0 = add i32 1, 0
    %var1 = icmp eq i32 %var0, 1
    br i1 %var1, label %label_28, label %label_32
    label_28:
        %var3 = getelementptr [5 x i8] , [5 x i8]* @.var2, i32 0, i32 0
        call void (i8*) @print(i8* %var3)
        br label %label_36
    label_32:
        %var5 = getelementptr [6 x i8] , [6 x i8]* @.var4, i32 0, i32 0
        call void (i8*) @print(i8* %var5)
        br label %label_36
    label_36:
        %var6 = add i32 0, 0
        %var7 = icmp eq i32 %var6, 1
        br i1 %var7, label %label_40, label %label_44
    label_40:
        %var9 = getelementptr [5 x i8] , [5 x i8]* @.var8, i32 0, i32 0
        call void (i8*) @print(i8* %var9)
        br label %label_48
    label_44:
        %var11 = getelementptr [6 x i8] , [6 x i8]* @.var10, i32 0, i32 0
        call void (i8*) @print(i8* %var11)
        br label %label_48
    label_48:
        ret void
}


declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.divide_by_zero_error = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define void @divByZero() {
    %spec_ptr = getelementptr [23 x i8], [23 x i8]* @.divide_by_zero_error, i32 0, i32 0
    call void (i8*) @print(i8* %spec_ptr)
    %exitCode = add i32 0, 0
    call void @exit(i32 %exitCode)
    ret void
}

define i32 @var0func1(i32)
{
    %myArr_0 = alloca [50 x i32]
    %var1 = add i32 %0, 0
    %var2 = add i32 5, 0
    %var3 = icmp slt i32 %var1, %var2
    br i1 %var3, label %label_29, label %label_31
    label_29:
        br label %label_33
    label_31:
        br label %label_33
    label_33:
        %var4 = phi i32 [1, %label_29], [0, %label_31]
        ret i32 %var4
        ret i32 0
}

define void @main()
{
    %myArr_1 = alloca [50 x i32]
        %var5 = add i32 0, 0
        %var6 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        store i32 %var5, i32* %var6
        br label %label_46
    label_46:
        %var7 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        %var8 = load i32, i32* %var7
        %var9 = call i32 @var0func1(i32 %var8)
        %var10 = icmp eq i32 %var9, 1
        br i1 %var10, label %label_52, label %label_66
    label_52:
        %var11 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        %var12 = load i32, i32* %var11
        call void @printi(i32 %var12)
        %var13 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        %var14 = load i32, i32* %var13
        %var15 = add i32 1, 0
        %var16 = trunc i32 %var14 to i8
        %var17 = trunc i32 %var15 to i8
        %var18 = add i8 %var16, %var17
        %var19 = zext i8 %var18 to i32
        %var20 = getelementptr [50 x i32], [50 x i32]* %myArr_1, i32 0, i32 0
        store i32 %var19, i32* %var20
        br label %label_46
    label_66:
        ret void
}

